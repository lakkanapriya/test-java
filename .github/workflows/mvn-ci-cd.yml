# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  #push:
    #branches: [ "main" ]
  #pull_request:
    #branches: [ "main" ]
  #release:
    #types: [created]
  workflow_dispatch:
  #schedule:
  #- cron: "0 2 * * 1-5"

#env:
  #build-number: ${GITHUB_RUN_NUMBER}

#defaults:
  #run:
    #working-directory: ./workDir
  
jobs:
  build:
    runs-on: ubuntu-latest
    #runs-on: ${{ matrix.os }}
    #strategy:
      #matrix:
        #os: [ubuntu-latest, windows-latest, macOS-latest]
        #java_version: ['8', '11', '17']
    steps:
    - name: Code Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        #java-version: ${{ matrix.java_version }}
        #distribution: 'temurin'
        distribution: 'corretto'
        cache: maven
        
    - name: PMD Code Analysis
      id: pmd
      uses: pmd/pmd-github-action@v1
      with:
        version: '7.0.0-rc4'
        sourcePath: 'src/main/java'
        #rulesets: 'rulesets/java/quickstart.xml,ruleset.xml'
        rulesets: '.pmd/rulesets/java/quickstart.xml'
        analyzeModifiedFilesOnly: false
    #- name: Fail build if there are PMD violations
      #if: steps.pmd.outputs.violations != 0
      #run: exit 1
    - name: Upload PMD SARIF file
      uses: github/codeql-action/upload-sarif@v3
      #env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        sarif_file: pmd-report.sarif
        #category: static-code-analysis-tool

    #- name: Checkstyle Code Analysis
    
    - name: Compile Test with Maven
      #add maven-surefire-report-plugin and jacoco-maven-plugin to pom
      #if: github.event_name == 'push'
      run: |
        #create seperate directory for output artifacts
        [ -e staging ] || mkdir -p staging/testOuts
        #cleanup, compile the sources and run test cases ; mvn uses surefire plugin to run junit tests
        mvn -B clean test --file pom.xml
        #mvn -B site
        mvn -B surefire-report:report
        mvn -B jacoco:report
        [ -e target/site ] && mv target/site staging/
        [ -e target/surefire-reports ] && mv target/surefire-reports staging/testOuts/
        [ -e target/jacoco.exec ] && mv target/jacoco.exec staging/testOuts/
        mvn -B clean package -Dmaven.test.skip=true --file pom.xml
        [ -e target/tdd-supermarket-1.0.0-SNAPSHOT.jar ] && mv target/tdd-supermarket-1.0.0-SNAPSHOT.jar staging/tdd-supermarket-1.0.0-SNAPSHOT-${GITHUB_RUN_NUMBER}.jar
        #[ -e target/tdd-supermarket-1.0.0-SNAPSHOT.jar ] && cp target/tdd-supermarket-1.0.0-SNAPSHOT.jar target/tdd-supermarket-1.0.0-SNAPSHOT-${GITHUB_RUN_NUMBER}.jar
        #[ -e target/tdd-supermarket-1.0.0-SNAPSHOT.jar ] && mv target/tdd-supermarket-1.0.0-SNAPSHOT.jar staging/
    
    #- name: JaCoCo Report
      #run: |
        #mkdir jacoco
        #cd jacoco
        #wget https://repo1.maven.org/maven2/org/jacoco/jacoco/0.8.11/jacoco-0.8.11.zip
        #unzip jacoco-0.8.11.zip
        
    - name: Upload built jar and test reports
      id: artifacts-upload-step
      uses: actions/upload-artifact@v4
      with:
        name: TestReports
        #path: target/tdd-supermarket-1.0.0-SNAPSHOT.jar
        path: staging
        #path: target/*.jar
        #path: |
          #path/output/bin/
          #path/output/test-results
        retention-days: 1
    - name: Output jar artifact ID
      run:  echo 'Artifact ID is ${{ steps.artifacts-upload-step.outputs.artifact-id }}'
        
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
      #uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Login to Docker Hub
      id: docker-login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    #- name: Set up Docker Buildx
      #uses: docker/setup-buildx-action@v3
      #with:
        #buildkitd-flags: --debug
        #config: .github/buildkitd.toml
    #- name: Build and Push
      #uses: docker/build-push-action@v5
      #with:
        #context: .
        #file: ./Dockerfile
        #push: true
        #tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-repo:tdd-supermarket

    - name: Publish Docker Image to Docker Hub
      env:
        REPO: test-repo
        TAG: tdd-supermarket
        REGISTRY: ${{ steps.docker-login.outputs.registry }}
      run: |
        docker build -t $REGISTRY/$REPO:$TAG .
        docker push $REGISTRY/$REPO:$TAG
        #docker push $REGISTRY/$REPO:latest
        echo "::set-output name=image::$REGISTRY/$REPO:$TAG"
